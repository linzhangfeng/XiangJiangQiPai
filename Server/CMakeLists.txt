#Generated by VisualGDB project wizard.
#Note: VisualGDB will automatically update this file when you add new sources to the project.
#option(test_case "Build all tests." ON)

cmake_minimum_required(VERSION 2.7)
project(server)

set(LIBRARIES_FROM_REFERENCES "")
add_executable(server main.cpp common/config.cpp common/common.cpp common/log.cc common/protobuf2json.cpp common/sql_time.cpp /
        network/chttp.cpp network/ws_client.cpp network/ws_server.cpp /
        proto/login.pb.cc proto/player.pb.cc /
        game/game.cpp game/player.cpp game/table.cpp game/table_factory.cpp game/table_shetiqi.cpp /
        task/task_list.cpp task/task_thread.cpp
        )


target_link_libraries(server -L${CMAKE_SOURCE_DIR}/./lib -lprotobuf -lboost_system -lssl -ljsoncpp -lcryptopp -lcrypto "${LIBRARIES_FROM_REFERENCES}")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} ")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -std=c++11 -pthread")
#include_directories(/home/mengrui/usr/include)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11  -pthread -ggdb -ffunction-sections -fno-strict-aliasing -Wno-write-strings -frtti -fexceptions -O0 -Wall")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=c99")

#test

#if(test_case)
#MESSAGE( STATUS ${test_case})
#file(GLOB cpp_common_file common/*.cpp)
#file(GLOB cpp_game_file game/*.cpp)
#file(GLOB cpp_network_file network/*.cpp)
#file(GLOB cpp_proto_file proto/*.cc)
#file(GLOB cpp_table_file table/*.cpp)
#file(GLOB cpp_task_file task/*.cpp)
#file(GLOB cpp_test_file test/*.cpp)
#add_executable(test config.cpp  ${cpp_common_file} ${cpp_game_file}  ${cpp_network_file} ${cpp_proto_file} ${cpp_table_file} ${cpp_task_file} ${cpp_test_file})
#target_link_libraries(test -L${CMAKE_SOURCE_DIR}/./lib -lboost_system -ljsoncpp -lglog -lprotobuf -lcryptopp -lssl -lcrypto -lgtest -lgmock "${LIBRARIES_FROM_REFERENCES}")
#endif()


